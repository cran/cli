% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/status-bar.R
\name{cli_status_clear}
\alias{cli_status_clear}
\title{Clear the status bar (superseded)}
\usage{
cli_status_clear(
  id = NULL,
  result = c("clear", "done", "failed"),
  msg_done = NULL,
  msg_failed = NULL,
  .envir = parent.frame()
)
}
\arguments{
\item{id}{Id of the status bar container to clear. If \code{id} is not the id
of the current status bar (because it was overwritten by another
status bar container), then the status bar is not cleared. If \code{NULL}
(the default) then the status bar is always cleared.}

\item{result}{Whether to show a message for success or failure or just
clear the status bar.}

\item{msg_done}{If not \code{NULL}, then the message to use for successful
process termination. This overrides the message given when the status
bar was created.}

\item{msg_failed}{If not \code{NULL}, then the message to use for failed
process termination. This overrides the message give when the status
bar was created.}

\item{.envir}{Environment to evaluate the glue expressions in. It is
also used to auto-clear the status bar if \code{.auto_close} is \code{TRUE}.}
}
\description{
\strong{The \verb{cli_status_*()} functions are superseded by
the \code{\link[=cli_progress_message]{cli_progress_message()}} and \code{\link[=cli_progress_step]{cli_progress_step()}} functions,
because they have a better default behavior.}

Clear the status bar
}
\seealso{
The \code{\link[=cli_progress_message]{cli_progress_message()}} and \code{\link[=cli_progress_step]{cli_progress_step()}}
functions, for a superior API.

Other status bar: 
\code{\link{cli_process_start}()},
\code{\link{cli_status_update}()},
\code{\link{cli_status}()}
}
\concept{status bar}
